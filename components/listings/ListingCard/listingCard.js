import {makeStyles} from '@material-ui/core/styles';
import Card from '@material-ui/core/Card';
import CardActionArea from '@material-ui/core/CardActionArea';
import CardContent from '@material-ui/core/CardContent';
import CardMedia from '@material-ui/core/CardMedia';
import Typography from '@material-ui/core/Typography';
import Divider from '@material-ui/core/Divider';
import ThreeDotsIcon from '../../../public/images/threeDots.svg';
import CalenderIcon from '../../../public/images/SmallCalenderIcon.svg';
import ClockIcon from '../../../public/images/ClockIcon.svg';
import Stars from '../Details/Stars';
import OptionsPopover from '../OptionsPopover';
import PersonIcon from '../../../public/images/SmallPerson.svg';
import PermIdentityIcon from '@material-ui/icons/PermIdentity';
import Popover from '@material-ui/core/Popover';
import {useState, useEffect} from 'react';
import styles from './styles.module.sass';
import moment from 'moment';
import api from '../../../lib/api';
import {useRouter} from 'next/router';
import currencyService from '../../../lib/currencyService';
import ClickAwayListener from '@material-ui/core/ClickAwayListener'
import defaultImg from '../../../public/images/listingDefault.svg'
// import { signin, signout, useSession } from 'next-auth/client';
// import axios from 'axios'


const dollarChar = '\u0024';
const rupeeChar = '\u20B9';

const useStyles = makeStyles({
  root: {
    display: 'flex',
    borderRadius: 0,
    boxShadow: 'none',
  },
});

export default function ListingCard({listing, isAdvisorSide, userId, userName}) {
  const [isVisibleOnProfile, setIsVisibleOnProfile] =
  useState(listing.isVisibleOnProfile);
  const [isActive, setIsActive] = useState(listing.isActive);
  // const [session, loading] = useSession();
  // const [userId, setUserId] = useState(null)

  var currencySymbol ;
 /*  if (currencyService.getDefaultCurrency()!=='rupee') {
    currencySymbol = dollarChar;
  } */

  if (listing.currency === 'Rupee'){
    currencySymbol = rupeeChar
  } else {
    currencySymbol = dollarChar
  }


  /* useEffect(() => {
    if (localStorage.getItem('userInfo')) {
      const data = JSON.parse(localStorage.getItem('userInfo'))
      api.getPofile(data.userId)
        .then(res => console.log(res))
        .catch(err => console.log(err))
    }
  }, []) */

  const classes = useStyles();
  const [anchorEl, setAnchorEl] = useState(null);
  const sales = listing.sales + ' sales';
  let price = 0;

  if (listing.price!==undefined && listing.price!==null) {
    price = parseFloat(listing.price).toFixed(2);
  } else {
    price = parseFloat(listing.pricePerEntry).toFixed(2);
  }
  const total = (listing.sales*price).toFixed(0) + ' Total';

  let type = '';
  const description = listing.description;
  const title = listing.name;

  if (listing.serviceType===5) {
    type = 'Membership';
  } else if (listing.serviceType===4) {
    type = 'Project Based Service';
  } else if (listing.serviceType===3) {
    type = 'One Time Event';
  } else if (listing.serviceType===2) {
    type = 'Time Bound Event';
  }


  // options popover handling starts here
  const handleOpen = (event) => {
    event.stopPropagation();
    setAnchorEl(event.currentTarget);

    // setOpen((prev) => !prev);
  };

  const handleClose = () => {
    setAnchorEl(false);
  };

  /*  const handleClickAway = () => {
    setOpen(false);
  };
 */
  // console.log(Boolean(anchorEl))

  const open = Boolean(anchorEl);
  // console.log(open)
  const id = open ? 'simple-popover' : false;

  // options popover handling ends here

  function threeDotsUpdater(which, bool) {
    if (which==='isVisibleOnProfile') {
      setIsVisibleOnProfile(bool);
    } else {
      setIsActive(bool);
    }
  }
  const router = useRouter();

  function desicion(listing) {
    if (router.pathname !== '/user/editprofile' && router.pathname !== '/user/profile' ) {
      if (!open){
        // onClickHandler(listing)
        router.push({
          pathname: `/user/listing/${listing.id}`
        })
      }
    }else if (router.pathname == '/user/profile'){
      if (listing.isActive) {
        router.push({
          pathname: `/listings/${listing.id}`,
          query:  { seristo_userId: userId, seristo_user: userName }
        })
      }
      else {
        console.log('Sorry This Listing is Inactive')
      }
    }
  }


  // console.log(listing)
  return (
    <div>
      {router.pathname === '/user/editprofile' || router.pathname === '/user/profile' ?
      <div>
      {listing.isVisibleOnProfile ? 
        <React.Fragment>
        <Card onClick={()=> desicion(listing)} className={classes.root}>
        <CardActionArea >          
          {listing.coverImage !== null  ? 
            <CardMedia
              component="img"
              height="150"
              src={listing.coverImage}
              title={title}
            />
            :
            <CardMedia
              component="img"
              height="150"
              src="https://www.ge.com/news/sites/default/files/styles/full_header/public/Reports/2020-03/wind-onshore-48-158-3d-landscape-1-3000px.jpg?itok=MdBGJ3Tk"
              title={title}
            />
          }
          
          <CardContent style={{padding: '5px'}}>
            <Typography variant="h4" component="h2">
              {title}
            </Typography>

            <Typography gutterBottom variant="h6" component="h2">
              {type}
            </Typography>

            <div className={styles.starsRow} style = {{flexDirection: 'row-reverse'}}>
             {/* <div className={styles.starsAndRating}>
                <Stars rating={listing.avgRating}/>
                <span>{`${listing.totalReviews} reviews`}</span>
              </div>*/}

              <div>
                <PriceTag price={price} currency={currencySymbol}/>                
              </div>
            </div> 
            <DetailsRow listing={listing}/>


            <div className={styles.description} dangerouslySetInnerHTML={{__html: description}}>
              
            </div>

          </CardContent>
          <Divider />

          {isAdvisorSide ? <div className={styles.detailsRowBottom}>
            <Typography gutterBottom variant="subtitle2"
              display="inline" component="h2"
              color="primary" style={{fontSize: 15}}>
              {sales}
            </Typography>

            <Typography gutterBottom variant="subtitle2"
              display="inline" component="h2"
              color="primary" style={{fontSize: 15}}>
              {'$'}{total}
            </Typography>
          </div> :
          null}
        </CardActionArea>
      </Card>
      </React.Fragment>
      : null}
      
      </div>
      :
       <Card onClick={()=> desicion(listing)} className={classes.root}>

        <CardActionArea >
        {router.pathname !== '/user/editprofile' && router.pathname !== '/user/profile'  ?
          <div>
            
          <div className={styles.threeDots} onClick={handleOpen}>
              <ThreeDotsIcon />
          </div>
            
            <Popover
              id={id}
              open={open}
              anchorEl={anchorEl}
              onClose={handleClose}
              anchorOrigin={{
                vertical: 'bottom',
                horizontal: 'center',
              }}
              transformOrigin={{
                vertical: 'top',
                horizontal: 'center',
              }}
            >
                <OptionsPopover 
                  id={listing.id} 
                  listing = {listing}
                  isVisibleOnProfile={isVisibleOnProfile}
                  isActive={isActive} updater={threeDotsUpdater}/>
            </Popover> 

            
          </div>
          : '' }


          {router.pathname !== '/user/editprofile' && router.pathname !== '/user/profile'  ?
              <div>
                {isActive ?
                  <div className={styles.active}>
                    Active
                  </div> :
                  <div className={styles.inactive}>
                    Inactive
                  </div>
                }
              </div>
          : '' }

         
          
          {listing.coverImage !== null  ? 
          <CardMedia
            component="img"
            height="150"
            src={listing.coverImage}
            title={title}
          />
          :
          <CardMedia
            component="img"
            height="150"
            src="https://www.ge.com/news/sites/default/files/styles/full_header/public/Reports/2020-03/wind-onshore-48-158-3d-landscape-1-3000px.jpg?itok=MdBGJ3Tk"
            title={title}
          />
          }
          <CardContent style={{padding: '5px'}}>
            <Typography variant="h4" component="h2">
              {title}
            </Typography>

            <Typography gutterBottom variant="h6" component="h2">
              {type}
            </Typography>

            <div className={styles.starsRow} style = {{flexDirection: 'row-reverse'}}>
              {/* <div className={styles.starsAndRating}>
                <Stars rating={listing.avgRating}/>
                {listing.totalReviews !==  null ? 
                <span>{`${listing.totalReviews} reviews`}</span>
                : 
                <span>{'No reviews'}</span>
              }
              </div> */}

              <div>
                <PriceTag price={price} currency={currencySymbol}/>                
              </div>
            </div>
            <DetailsRow listing={listing}/>


            <div className={styles.description} dangerouslySetInnerHTML={{__html: description}}>
              
            </div>

          </CardContent>
          <Divider />

          {isAdvisorSide ? <div className={styles.detailsRowBottom}>
            <Typography gutterBottom variant="subtitle2"
              display="inline" component="h2"
              color="primary" style={{fontSize: 15}}>
              {sales}
            </Typography>

            <Typography gutterBottom variant="subtitle2"
              display="inline" component="h2"
              color="primary" style={{fontSize: 15}}>
              {'$'}{total}
            </Typography>
          </div> :
          null}
        </CardActionArea>
      </Card> }
      

    </div>
  );
}


function PriceTag({price, currency}) {
  return (
    <div className={styles.priceTag}>
      <div className={styles.priceTagPrice}>
        {currency + ' ' + price}
      </div>
      <div className={styles.triangle}>

      </div>
    </div>
  );
}

function DetailsRow({listing}) {
  // todo
  let days = []
  let weekDays = [
    { 
      "id": 1,
      "key": "Mon",
      "day": "Monday"
    },
    { 
      "id": 2,
      "key": "Tue",
      "day": "Tuesday"
    },
    { 
      "id": 3,
      "key": "Wed",
      "day": "Wednesday"
    },
    { 
      "id": 4,
      "key": "Thu",
      "day": "Thursday"
    },
    { 
      "id": 5,
      "key": "Fri",
      "day": "Friday"
    },
    { 
      "id": 6,
      "key": "Sat",
      "day": "Saturday"
    },
    { 
      "id": 7,
      "key": "Sun",
      "day": "Sunday"
    },
  ]


  // console.log(listing.serviceSchedule)
  // console.log(listing.serviceSchedule.length)


      for (let i = 0; i < 7; i++)  {
        if (listing.serviceSchedule && listing.serviceSchedule[0].days[i] !== undefined)
          days.push(listing.serviceSchedule[0].days[i])
        // console.log(listing.serviceSchedule[i].days[i])
      }
  
  return (
    <div className={styles.detailsRow}>
      {listing.maxParticipant!==null ?
        <div>
          {/* <PermIdentityIcon fontSize = "small" /> */}
          <svg width="11" height="11" viewBox="0 0 11 11" fill="none" xmlns="http://www.w3.org/2000/svg">
          <mask id="path-1-inside-1" fill="white">
          <path fill-rule="evenodd" clip-rule="evenodd" d="M10 11C10 11 11 10.9167 11 10C11 9.08333 10.5833 6 6 6C1.41667 6 0 9.08333 0 10C0 10.9167 1 11 1 11H10ZM1 10H10C10.0043 9.9995 9.99574 10.0007 10 10C9.99908 9.7745 9.6215 9.6215 9 9C8.40233 8.40233 8.09825 7 6 7C3.90083 7 2.59767 8.40233 2 9C1.3785 9.6215 1.00183 9.7745 1 10C0.993265 9.99885 1.00671 10.0013 1 10ZM6 5C6.48623 5 6.65618 4.34382 7 4C7.34382 3.65618 7 3.48623 7 3C7 2.51377 7.34382 1.34382 7 1C6.65618 0.656183 6.48623 1 6 1C5.51377 1 4.34382 0.656183 4 1C3.65618 1.34382 4 2.51377 4 3C4 3.48623 3.65618 3.65618 4 4C4.34382 4.34382 5.51377 5 6 5ZM8 3C8 3.72935 7.51573 4.48427 7 5C6.48427 5.51573 6.72935 6 6 6C5.27065 6 4.51573 5.51573 4 5C3.48427 4.48427 3 3.72935 3 3C3 2.27065 3.48427 1.51573 4 1C4.51573 0.484275 5.27065 0 6 0C6.72935 0 6.48427 0.484275 7 1C7.51573 1.51573 8 2.27065 8 3Z"/>
          </mask>
          <path fill-rule="evenodd" clip-rule="evenodd" d="M10 11C10 11 11 10.9167 11 10C11 9.08333 10.5833 6 6 6C1.41667 6 0 9.08333 0 10C0 10.9167 1 11 1 11H10ZM1 10H10C10.0043 9.9995 9.99574 10.0007 10 10C9.99908 9.7745 9.6215 9.6215 9 9C8.40233 8.40233 8.09825 7 6 7C3.90083 7 2.59767 8.40233 2 9C1.3785 9.6215 1.00183 9.7745 1 10C0.993265 9.99885 1.00671 10.0013 1 10ZM6 5C6.48623 5 6.65618 4.34382 7 4C7.34382 3.65618 7 3.48623 7 3C7 2.51377 7.34382 1.34382 7 1C6.65618 0.656183 6.48623 1 6 1C5.51377 1 4.34382 0.656183 4 1C3.65618 1.34382 4 2.51377 4 3C4 3.48623 3.65618 3.65618 4 4C4.34382 4.34382 5.51377 5 6 5ZM8 3C8 3.72935 7.51573 4.48427 7 5C6.48427 5.51573 6.72935 6 6 6C5.27065 6 4.51573 5.51573 4 5C3.48427 4.48427 3 3.72935 3 3C3 2.27065 3.48427 1.51573 4 1C4.51573 0.484275 5.27065 0 6 0C6.72935 0 6.48427 0.484275 7 1C7.51573 1.51573 8 2.27065 8 3Z" fill="#4F4F4F"/>
          <path d="M10 11V14H10.1248L10.2491 13.9896L10 11ZM1 11L0.750864 13.9896L0.875216 14H1V11ZM10 10V13H10.1743L10.3475 12.9798L10 10ZM1 10L-1.9999 9.97561L-2.0202 12.4729L0.431946 12.9457L1 10ZM6 1V-2V1ZM4 3H1H4ZM6 0V-3V0ZM10 11C10.2491 13.9896 10.2505 13.9895 10.2518 13.9894C10.2523 13.9894 10.2536 13.9893 10.2545 13.9892C10.2563 13.989 10.2582 13.9889 10.26 13.9887C10.2637 13.9884 10.2676 13.988 10.2714 13.9877C10.2792 13.987 10.2873 13.9862 10.2958 13.9854C10.3127 13.9837 10.3311 13.9818 10.3507 13.9796C10.3899 13.9751 10.4348 13.9694 10.4845 13.962C10.5832 13.9473 10.7059 13.9254 10.8456 13.8924C11.1125 13.8294 11.5051 13.7112 11.9288 13.4816C12.8715 12.971 14 11.8406 14 10H8C8 9.64719 8.10767 9.22832 8.36956 8.84638C8.61059 8.49489 8.89409 8.30178 9.07115 8.20587C9.24493 8.11174 9.3875 8.07168 9.46687 8.05294C9.5128 8.04209 9.55739 8.03385 9.6014 8.0273C9.62384 8.02396 9.64721 8.0209 9.67176 8.01811C9.68407 8.01671 9.69678 8.01536 9.70992 8.01407C9.7165 8.01342 9.72319 8.01279 9.73001 8.01218C9.73342 8.01187 9.73686 8.01156 9.74034 8.01126C9.74207 8.01111 9.74382 8.01096 9.74557 8.01081C9.74645 8.01073 9.74778 8.01062 9.74821 8.01058C9.74954 8.01047 9.75086 8.01036 10 11ZM14 10C14 9.19654 13.8349 7.44644 12.6018 5.8339C11.25 4.06607 9.03425 3 6 3V9C6.8114 9 7.26804 9.13617 7.49788 9.23817C7.71242 9.33339 7.7963 9.4271 7.83568 9.4786C7.95672 9.63689 8 9.88679 8 10H14ZM6 3C2.97623 3 0.722505 4.04149 -0.790757 5.48674C-1.52198 6.18509 -2.04888 6.94829 -2.40196 7.6702C-2.72244 8.32544 -3 9.15399 -3 10H3C3 10.3877 2.89952 10.4871 2.9879 10.3064C3.04367 10.1923 3.15739 10.0128 3.35326 9.82576C3.69416 9.50018 4.44044 9 6 9V3ZM-3 10C-3 11.8406 -1.87155 12.971 -0.928849 13.4816C-0.505066 13.7112 -0.112499 13.8294 0.154372 13.8924C0.294055 13.9254 0.416763 13.9473 0.515465 13.962C0.565243 13.9694 0.610102 13.9751 0.649297 13.9796C0.668933 13.9818 0.687258 13.9837 0.704183 13.9854C0.71265 13.9862 0.720779 13.987 0.728559 13.9877C0.732449 13.988 0.736254 13.9884 0.739971 13.9887C0.74183 13.9889 0.743667 13.989 0.745483 13.9892C0.746389 13.9893 0.747737 13.9894 0.748189 13.9894C0.749528 13.9895 0.750864 13.9896 1 11C1.24914 8.01036 1.25046 8.01047 1.25179 8.01058C1.25222 8.01062 1.25355 8.01073 1.25443 8.01081C1.25618 8.01096 1.25793 8.01111 1.25966 8.01126C1.26314 8.01156 1.26658 8.01187 1.26999 8.01218C1.27681 8.01279 1.2835 8.01342 1.29008 8.01407C1.30322 8.01536 1.31593 8.01671 1.32824 8.01811C1.35279 8.0209 1.37616 8.02396 1.3986 8.0273C1.44261 8.03385 1.4872 8.04209 1.53313 8.05294C1.6125 8.07168 1.75507 8.11174 1.92885 8.20587C2.10591 8.30178 2.38942 8.49489 2.63044 8.84638C2.89233 9.22832 3 9.64719 3 10H-3ZM1 14H10V8H1V14ZM1 13H10V7H1V13ZM10.3475 12.9798C10.342 12.9804 10.3328 12.9815 10.3213 12.9827C10.3126 12.9837 10.2886 12.9862 10.2576 12.9889C10.243 12.9901 10.212 12.9927 10.1726 12.995C10.1527 12.9961 10.1203 12.9978 10.0803 12.9988C10.0598 12.9994 10.0326 12.9999 10.0006 12.9999C9.96987 12.9999 9.92474 12.9994 9.8702 12.997C9.84229 12.9958 9.80781 12.9939 9.76832 12.9908C9.7295 12.9878 9.67902 12.9831 9.6202 12.9756C9.56316 12.9683 9.48277 12.9563 9.38745 12.9364C9.34737 12.9278 9.26118 12.9072 9.21515 12.8951C9.16103 12.8798 9.04378 12.843 8.98081 12.821C8.90535 12.7926 8.741 12.7223 8.65266 12.6797C8.54514 12.6228 8.31283 12.4796 8.18994 12.3914C8.04195 12.2717 7.73999 11.9714 7.59211 11.7876C7.43296 11.5503 7.17272 10.9996 7.08136 10.6886C7.02227 10.3544 7.01664 9.69634 7.0659 9.38038C7.13613 9.11043 7.327 8.64031 7.43844 8.44038C7.53903 8.28596 7.74265 8.02536 7.84176 7.91742C7.92528 7.83415 8.08432 7.6922 8.15856 7.63249C8.22111 7.58511 8.33859 7.50277 8.39309 7.46733C8.43969 7.43833 8.52718 7.387 8.5679 7.36444C8.66459 7.31186 8.74755 7.27367 8.80543 7.24851C8.86539 7.22245 8.91723 7.20226 8.95671 7.18759C8.99696 7.17265 9.03222 7.16054 9.0606 7.15116C9.11602 7.13286 9.1622 7.11942 9.19327 7.11073C9.22573 7.10166 9.25338 7.09451 9.27414 7.08933C9.31461 7.07922 9.34755 7.0719 9.36762 7.06756C9.38914 7.06291 9.4072 7.05926 9.42014 7.0567C9.44542 7.05171 9.46579 7.04803 9.47761 7.04594C9.50143 7.04172 9.52026 7.03869 9.52938 7.03724C9.54914 7.03409 9.56527 7.03173 9.57575 7.03023C9.58623 7.02874 9.60238 7.02649 9.62222 7.02397C9.63138 7.02281 9.65031 7.02045 9.67436 7.01783C9.68629 7.01654 9.70687 7.01436 9.73254 7.01207C9.74568 7.0109 9.76404 7.00935 9.786 7.00779C9.80648 7.00633 9.84016 7.00414 9.88183 7.00252C9.90322 7.00168 9.93177 7.00079 9.96546 7.00042C9.99773 7.00006 10.0458 7.00004 10.1042 7.00209C10.134 7.00313 10.1713 7.00489 10.2141 7.00797C10.2561 7.01099 10.3115 7.01586 10.3764 7.02409C10.439 7.03203 10.5293 7.04547 10.6369 7.06888C10.6823 7.07913 10.7806 7.10391 10.8335 7.1187C10.8957 7.13746 11.0316 7.18362 11.1049 7.21159C11.1929 7.24812 11.3853 7.33987 11.4888 7.39642C11.6142 7.47228 11.8826 7.66545 12.0224 7.78553C12.1854 7.94626 12.5002 8.34413 12.6432 8.58363C12.779 8.87315 12.9579 9.50648 12.9947 9.8438C12.9941 10.168 12.8985 10.7696 12.8121 11.0419C12.7216 11.2597 12.5158 11.6326 12.4072 11.7889C12.314 11.9081 12.1311 12.1105 12.0438 12.1952C11.9709 12.2609 11.8328 12.3743 11.7683 12.4228C11.714 12.4615 11.6118 12.5297 11.5641 12.5595C11.5233 12.584 11.4463 12.6279 11.4102 12.6474C11.3243 12.6933 11.2505 12.7272 11.1978 12.7502C11.1434 12.7739 11.0963 12.7925 11.0598 12.8063C11.0228 12.8203 10.9902 12.8318 10.9638 12.8408C10.9121 12.8583 10.8689 12.8714 10.8394 12.8801C10.8087 12.889 10.7824 12.8961 10.7626 12.9014C10.7239 12.9116 10.6923 12.919 10.6729 12.9235C10.6344 12.9324 10.6039 12.9386 10.5896 12.9415C10.5591 12.9476 10.5353 12.9519 10.5267 12.9534C10.5153 12.9554 10.5062 12.957 10.5008 12.9579L9.49924 7.04209C9.49329 7.0431 9.4837 7.04474 9.47195 7.04684C9.46305 7.04842 9.43896 7.05275 9.40835 7.0589C9.39388 7.0618 9.36331 7.06803 9.32479 7.07692C9.30534 7.0814 9.27376 7.08888 9.23505 7.09907C9.21519 7.1043 9.18894 7.11142 9.15822 7.12039C9.1287 7.12901 9.0855 7.1421 9.0338 7.15966C9.00734 7.16865 8.97478 7.18012 8.93773 7.19413C8.9013 7.20791 8.85415 7.22654 8.79979 7.25024C8.74707 7.27323 8.67324 7.30719 8.58731 7.35301C8.55126 7.37255 8.47428 7.41645 8.43348 7.44096C8.38579 7.47074 8.28354 7.53893 8.22925 7.57767C8.16477 7.62611 8.02665 7.73954 7.95379 7.80522C7.8665 7.88993 7.68356 8.09241 7.59031 8.21157C7.48174 8.36789 7.27596 8.74076 7.18544 8.95853C7.0991 9.2309 7.00347 9.83248 7.00285 10.1567C7.03968 10.494 7.21854 11.1273 7.3543 11.4168C7.49731 11.6563 7.81217 12.0542 7.97514 12.2149C8.11495 12.335 8.38339 12.5282 8.50876 12.604C8.61225 12.6606 8.80467 12.7523 8.89267 12.7889C8.96598 12.8168 9.10182 12.863 9.16406 12.8818C9.21692 12.8966 9.31529 12.9213 9.3607 12.9316C9.46824 12.955 9.55858 12.9684 9.62118 12.9764C9.68605 12.9846 9.74147 12.9895 9.78348 12.9925C9.8263 12.9956 9.86355 12.9973 9.89342 12.9984C9.95176 13.0004 9.99985 13.0004 10.0321 13C10.0658 12.9997 10.0944 12.9988 10.1158 12.998C10.1575 12.9963 10.1912 12.9941 10.2117 12.9927C10.2337 12.9911 10.252 12.9896 10.2652 12.9884C10.2909 12.9861 10.3116 12.9839 10.3236 12.9826C10.3478 12.98 10.3669 12.9776 10.3763 12.9764C10.3966 12.9738 10.4133 12.9715 10.4243 12.9699C10.4353 12.9684 10.452 12.9659 10.4721 12.9627C10.4815 12.9612 10.5005 12.9582 10.5245 12.9539C10.5364 12.9518 10.5568 12.9481 10.5821 12.9431C10.5951 12.9405 10.6132 12.9369 10.6347 12.9322C10.6548 12.9279 10.6878 12.9206 10.7283 12.9105C10.749 12.9053 10.7767 12.8981 10.8092 12.889C10.8403 12.8804 10.8864 12.8669 10.9419 12.8486C10.9702 12.8392 11.0055 12.8271 11.0458 12.8122C11.0852 12.7975 11.1371 12.7773 11.197 12.7513C11.2549 12.7261 11.3379 12.6879 11.4346 12.6353C11.4753 12.6128 11.5628 12.5614 11.6094 12.5324C11.6639 12.497 11.7814 12.4147 11.8439 12.3673C11.9182 12.3076 12.0772 12.1656 12.1607 12.0823C12.2598 11.9744 12.4635 11.7138 12.564 11.5594C12.6755 11.3594 12.8664 10.8893 12.9366 10.6194C12.9858 10.3034 12.9802 9.64534 12.9211 9.3112C12.8298 9.00015 12.5695 8.44942 12.4104 8.21211C12.2625 8.0284 11.9605 7.72806 11.8125 7.6084C11.6897 7.52011 11.4573 7.37695 11.3498 7.32008C11.2615 7.27742 11.0971 7.2072 11.0217 7.17876C10.9587 7.15677 10.8414 7.11994 10.7873 7.1047C10.7413 7.09259 10.6551 7.072 10.615 7.06334C10.5197 7.04341 10.4393 7.03148 10.3823 7.02417C10.3234 7.01664 10.273 7.01195 10.2341 7.00893C10.1947 7.00586 10.1602 7.00396 10.1323 7.00274C10.0777 7.00035 10.0326 6.99988 10.0018 6.99988C9.96982 6.99987 9.94262 7.00038 9.92209 7.00092C9.88207 7.00198 9.84966 7.00364 9.82974 7.00478C9.79027 7.00704 9.75917 7.00962 9.74448 7.01088C9.71336 7.01355 9.68903 7.01614 9.68005 7.01711C9.66818 7.01838 9.65851 7.01949 9.65252 7.02019L10.3475 12.9798ZM13 9.98781C12.996 9.00051 12.5501 8.3029 12.2606 7.94603C12.011 7.63838 11.7347 7.41198 11.6582 7.34796C11.4174 7.14642 11.3112 7.06858 11.1213 6.87868L6.87868 11.1213C7.31028 11.5529 7.70363 11.8623 7.80723 11.949C7.83555 11.9727 7.82549 11.9652 7.79965 11.9411C7.77572 11.9188 7.69648 11.8437 7.60096 11.726C7.50448 11.6071 7.35391 11.3991 7.22719 11.105C7.0928 10.7932 7.00169 10.422 7.00002 10.0122L13 9.98781ZM11.1213 6.87868C11.2248 6.98218 11.2749 7.07459 11.0614 6.758C10.9153 6.54129 10.6261 6.10927 10.2149 5.68586C9.2373 4.6792 7.86051 4 6 4V10C6.18368 10 6.19012 10.0291 6.10127 9.99148C6.00545 9.95095 5.93504 9.89111 5.91055 9.86589C5.90484 9.86001 5.91516 9.86974 5.94522 9.90964C5.97834 9.95361 6.01723 10.0094 6.08692 10.1127C6.14215 10.1946 6.25051 10.3576 6.36086 10.5091C6.47605 10.6672 6.64955 10.8922 6.87868 11.1213L11.1213 6.87868ZM6 4C2.5044 4 0.381298 6.37606 -0.12132 6.87868L4.12132 11.1213C4.81404 10.4286 5.29727 10 6 10V4ZM-0.12132 6.87868C-0.311668 7.06903 -0.418235 7.14726 -0.658619 7.34859C-0.73524 7.41276 -1.01045 7.63849 -1.2593 7.94495C-1.54764 8.30006 -1.99192 8.99341 -1.9999 9.97561L3.9999 10.0244C3.99659 10.4322 3.90483 10.801 3.77074 11.1104C3.64426 11.4024 3.49453 11.6089 3.39855 11.7271C3.30354 11.8441 3.22479 11.9187 3.20105 11.9408C3.17543 11.9648 3.16553 11.9721 3.19387 11.9484C3.29765 11.8615 3.69017 11.5525 4.12132 11.1213L-0.12132 6.87868ZM0.431946 12.9457C0.430031 12.9454 0.426516 12.9447 0.422023 12.9438C0.418709 12.9431 0.409043 12.9412 0.396582 12.9387C0.390709 12.9375 0.37812 12.9349 0.362162 12.9314C0.354114 12.9296 0.340947 12.9267 0.324718 12.9229C0.316394 12.921 0.305323 12.9184 0.292299 12.9152C0.279818 12.9122 0.261317 12.9076 0.238958 12.9017C0.227513 12.8987 0.213266 12.8949 0.196909 12.8904C0.180873 12.8859 0.159694 12.8798 0.134893 12.8724C0.111052 12.8652 0.0762125 12.8543 0.0344478 12.8401C0.0165982 12.834 -0.022231 12.8202 -0.0431922 12.8125C-0.0684732 12.8029 -0.12439 12.7809 -0.154975 12.7683C-0.193332 12.752 -0.280192 12.7126 -0.328514 12.6892C-0.392693 12.6565 -0.542949 12.572 -0.628101 12.5189C-0.751088 12.4349 -1.04769 12.1911 -1.21302 12.0237C-1.46225 11.7115 -1.90159 10.7551 -1.99624 10.1051C-1.91678 9.30678 -1.28712 8.06126 -0.853203 7.64275C-0.558295 7.43803 -0.0436557 7.1885 0.159032 7.12124C0.291526 7.08572 0.517597 7.03974 0.610159 7.02608C0.677485 7.01799 0.795734 7.00748 0.84655 7.00442C0.88629 7.00262 0.957751 7.00071 0.989456 7.00042C1.01546 7.00042 1.06302 7.00101 1.08458 7.00153C1.1346 7.00291 1.17565 7.0053 1.20284 7.00712C1.23131 7.00904 1.25536 7.01106 1.27324 7.01268C1.29153 7.01434 1.30734 7.01595 1.3199 7.01729C1.34441 7.0199 1.36452 7.02235 1.37786 7.02404C1.39183 7.0258 1.40364 7.02739 1.41245 7.02861C1.42961 7.03098 1.44346 7.03305 1.45184 7.03432C1.46084 7.03569 1.46836 7.03687 1.47373 7.03772C1.48421 7.03939 1.49261 7.04079 1.49745 7.0416C1.50721 7.04324 1.51485 7.04457 1.51848 7.0452C1.52635 7.04658 1.53266 7.04772 1.53665 7.04844C1.54063 7.04917 1.54694 7.05032 1.5548 7.05181C1.55841 7.05249 1.56604 7.05393 1.57574 7.05584C1.58056 7.05678 1.58891 7.05843 1.59931 7.06056C1.60464 7.06165 1.61209 7.06318 1.62099 7.06507C1.62928 7.06683 1.64298 7.06978 1.65988 7.0736C1.66855 7.07556 1.68017 7.07823 1.69386 7.08149C1.70694 7.08461 1.72663 7.0894 1.75049 7.09558C1.76271 7.09874 1.77808 7.10281 1.79578 7.10769C1.81309 7.11246 1.83632 7.11904 1.86364 7.12727C1.88972 7.13513 1.92899 7.14734 1.97629 7.16366C1.99665 7.17076 2.04138 7.18695 2.06572 7.1961C2.09529 7.20754 2.16151 7.23448 2.19807 7.25015C2.24456 7.27091 2.35154 7.32236 2.41171 7.35363C2.49354 7.39901 2.68896 7.52161 2.80047 7.6015C2.96651 7.7358 3.36037 8.15051 3.56435 8.44593C3.82318 8.99039 3.97412 10.3778 3.7675 11.153C3.45012 11.7281 2.70223 12.4686 2.35904 12.6732C2.14539 12.7716 1.78193 12.8955 1.63725 12.9308C1.53885 12.9505 1.36847 12.9767 1.29688 12.9848C1.24342 12.9896 1.14826 12.9959 1.1066 12.9977C1.07354 12.9987 1.01346 12.9996 0.986445 12.9997C0.964114 12.9995 0.922912 12.9987 0.904042 12.9982C0.859941 12.9968 0.823518 12.9947 0.798669 12.993C0.77282 12.9913 0.750869 12.9895 0.734287 12.9881C0.717373 12.9866 0.702694 12.9851 0.690922 12.9839C0.667924 12.9816 0.648992 12.9793 0.636241 12.9778C0.622935 12.9762 0.611656 12.9747 0.603185 12.9736C0.586672 12.9714 0.573324 12.9695 0.565173 12.9683C0.549011 12.9659 0.536309 12.9639 0.530387 12.963C0.51782 12.961 0.508102 12.9594 0.504771 12.9588C0.500254 12.9581 0.496725 12.9575 0.494803 12.9572L1.5052 7.04284C1.50243 7.04237 1.49822 7.04165 1.49316 7.04081C1.48928 7.04016 1.47915 7.03847 1.4663 7.03644C1.46023 7.03549 1.44741 7.03348 1.43116 7.03111C1.42297 7.02991 1.40958 7.02799 1.39304 7.0258C1.38455 7.02467 1.37326 7.02321 1.35994 7.02159C1.34718 7.02004 1.32823 7.01782 1.30523 7.01545C1.29345 7.01424 1.27877 7.0128 1.26185 7.0113C1.24526 7.00984 1.22331 7.00804 1.19746 7.00632C1.1726 7.00466 1.13618 7.00254 1.09208 7.00116C1.0732 7.00062 1.032 6.99987 1.00967 6.9997C0.982652 6.99972 0.922569 7.00063 0.88951 7.00165C0.847853 7.00344 0.752688 7.00973 0.69923 7.0146C0.627639 7.02264 0.457259 7.04883 0.358861 7.06857C0.214175 7.1039 -0.149283 7.22775 -0.362934 7.32616C-0.706123 7.53072 -1.45401 8.27128 -1.77139 8.84635C-1.97802 9.62153 -1.82707 11.009 -1.56824 11.5534C-1.36427 11.8489 -0.970401 12.2636 -0.804361 12.3979C-0.69285 12.4778 -0.49743 12.6004 -0.415602 12.6457C-0.355434 12.677 -0.248449 12.7285 -0.201965 12.7492C-0.1654 12.7649 -0.099182 12.7918 -0.0696104 12.8033C-0.0452694 12.8124 -0.00054048 12.8286 0.0198212 12.8357C0.0671298 12.852 0.106395 12.8642 0.132483 12.8721C0.159809 12.8803 0.183038 12.8869 0.200351 12.8917C0.218058 12.8966 0.233424 12.9006 0.24565 12.9038C0.26952 12.91 0.289215 12.9148 0.302305 12.9179C0.316014 12.9212 0.327643 12.9238 0.336324 12.9258C0.353251 12.9296 0.366977 12.9326 0.375303 12.9343C0.384244 12.9362 0.391736 12.9378 0.397105 12.9389C0.407596 12.941 0.416055 12.9427 0.420991 12.9437C0.43094 12.9456 0.438867 12.9471 0.442823 12.9479C0.451363 12.9495 0.458509 12.9508 0.463334 12.9517C0.468159 12.9525 0.475308 12.9538 0.483869 12.9553C0.487834 12.956 0.495783 12.9574 0.505782 12.9591C0.510742 12.9599 0.519249 12.9613 0.529823 12.963C0.535236 12.9639 0.542793 12.9651 0.551829 12.9664C0.560245 12.9677 0.574129 12.9698 0.591321 12.9722C0.600138 12.9734 0.611963 12.975 0.625945 12.9767C0.639295 12.9784 0.659414 12.9809 0.683934 12.9835C0.696492 12.9848 0.712305 12.9864 0.730598 12.9881C0.748484 12.9897 0.772541 12.9917 0.801016 12.9937C0.828202 12.9955 0.869252 12.9979 0.919277 12.9993C0.940836 12.9998 0.988401 13.0004 1.01441 13.0004C1.04611 13.0001 1.11757 12.9982 1.15731 12.9964C1.20813 12.9933 1.32638 12.9828 1.39371 12.9747C1.48627 12.961 1.71234 12.9151 1.84483 12.8795C2.04752 12.8123 2.56216 12.5627 2.85707 12.358C3.29099 11.9395 3.92065 10.694 4.00011 9.8957C3.90546 9.24572 3.46611 8.2893 3.21689 7.97704C3.05156 7.80972 2.75496 7.56586 2.63197 7.48186C2.54682 7.42875 2.39656 7.34426 2.33238 7.31154C2.28406 7.28816 2.1972 7.24878 2.15884 7.23243C2.12825 7.21985 2.07234 7.19785 2.04705 7.18832C2.02609 7.18062 1.98726 7.16682 1.96941 7.16067C1.92764 7.14644 1.8928 7.13561 1.86896 7.12841C1.84415 7.12092 1.82297 7.11488 1.80693 7.11041C1.79057 7.10585 1.77632 7.10203 1.76487 7.09902C1.7425 7.09314 1.72399 7.08855 1.7115 7.08551C1.69846 7.08233 1.68738 7.07973 1.67904 7.0778C1.66278 7.07403 1.64957 7.07111 1.64148 7.06935C1.62544 7.06585 1.61274 7.06321 1.60672 7.06198C1.59397 7.05935 1.5839 7.05736 1.58004 7.05661C1.575 7.05562 1.57081 7.0548 1.56805 7.05427L0.431946 12.9457ZM6 8C7.8331 8 8.78339 6.67172 9.00369 6.35985C9.08164 6.24952 9.1473 6.14761 9.18873 6.08277C9.2428 5.99814 9.25291 5.98138 9.27753 5.94375C9.32448 5.87198 9.2625 5.98014 9.12132 6.12132L4.87868 1.87868C4.5656 2.19176 4.35344 2.51088 4.25663 2.65885C4.20937 2.73108 4.1492 2.82638 4.13269 2.85222C4.10353 2.89786 4.0983 2.90483 4.10312 2.89801C4.10852 2.89036 4.1425 2.84238 4.20208 2.77568C4.26195 2.70866 4.36649 2.60138 4.51941 2.48732C4.6762 2.37038 4.88786 2.2434 5.15486 2.14755C5.42689 2.0499 5.71389 2 6 2V8ZM9.12132 6.12132C9.46629 5.77635 9.89397 5.21909 10.0724 4.42342C10.2493 3.63423 10.0911 2.99301 10.0072 2.70756C9.9685 2.57582 9.92455 2.45482 9.91795 2.43624C9.90231 2.39215 9.91137 2.41605 9.92221 2.45227C9.95251 2.55343 10 2.75023 10 3H4C4 3.49289 4.09047 3.89326 4.17449 4.17379C4.21219 4.29969 4.2508 4.40722 4.26336 4.44261C4.28497 4.50352 4.26787 4.45787 4.25064 4.39925C4.20973 4.26004 4.07301 3.75617 4.21773 3.11073C4.36389 2.45883 4.70562 2.05174 4.87868 1.87868L9.12132 6.12132ZM10 3C10 3.13474 9.98388 3.18949 10.0167 2.96539C10.036 2.83333 10.082 2.54156 10.1114 2.27008C10.14 2.00651 10.177 1.5717 10.1309 1.09863C10.0934 0.713278 9.95343 -0.289206 9.12132 -1.12132L4.87868 3.12132C4.53027 2.77291 4.35755 2.40924 4.27331 2.17322C4.19012 1.94017 4.16688 1.75911 4.15915 1.67971C4.15471 1.63413 4.1534 1.60019 4.15299 1.58046C4.15258 1.56043 4.15298 1.54925 4.15301 1.54848C4.15304 1.54752 4.15285 1.55327 4.1518 1.56677C4.15076 1.58016 4.14907 1.59866 4.14642 1.62311C4.13289 1.74787 4.11439 1.86125 4.08001 2.09605C4.06548 2.19527 4.04698 2.32543 4.03216 2.45987C4.01824 2.58619 4 2.78096 4 3H10ZM9.12132 -1.12132C8.77635 -1.46629 8.21909 -1.89397 7.42342 -2.07237C6.63423 -2.24932 5.99301 -2.09111 5.70756 -2.00722C5.57582 -1.9685 5.45482 -1.92455 5.43624 -1.91795C5.39215 -1.90231 5.41605 -1.91137 5.45227 -1.92221C5.55343 -1.95251 5.75023 -2 6 -2V4C6.49289 4 6.89326 3.90953 7.17379 3.82552C7.29969 3.78781 7.40722 3.7492 7.44261 3.73664C7.50352 3.71503 7.45787 3.73213 7.39925 3.74936C7.26004 3.79027 6.75617 3.92699 6.11073 3.78227C5.45883 3.63611 5.05174 3.29438 4.87868 3.12132L9.12132 -1.12132ZM6 -2C6.13474 -2 6.18949 -1.98388 5.96539 -2.01669C5.83333 -2.03603 5.54156 -2.08199 5.27008 -2.11144C5.00651 -2.14003 4.5717 -2.17698 4.09863 -2.13095C3.71328 -2.09345 2.71079 -1.95343 1.87868 -1.12132L6.12132 3.12132C5.77291 3.46973 5.40924 3.64245 5.17322 3.72669C4.94017 3.80988 4.75911 3.83312 4.67971 3.84085C4.63413 3.84529 4.60019 3.8466 4.58046 3.84701C4.56043 3.84742 4.54925 3.84702 4.54848 3.84699C4.54752 3.84696 4.55327 3.84715 4.56677 3.8482C4.58016 3.84924 4.59866 3.85093 4.62311 3.85358C4.74787 3.86711 4.86125 3.88561 5.09605 3.91999C5.19527 3.93452 5.32543 3.95302 5.45987 3.96784C5.58619 3.98176 5.78096 4 6 4V-2ZM1.87868 -1.12132C1.04657 -0.289206 0.906551 0.713278 0.869054 1.09863C0.823023 1.5717 0.859973 2.00651 0.88856 2.27008C0.918005 2.54156 0.96397 2.83333 0.983307 2.96539C1.01612 3.18949 1 3.13474 1 3H7C7 2.78096 6.98176 2.58619 6.96784 2.45987C6.95302 2.32543 6.93452 2.19527 6.91999 2.09605C6.88561 1.86125 6.86711 1.74787 6.85358 1.62311C6.85093 1.59866 6.84924 1.58016 6.8482 1.56677C6.84715 1.55327 6.84696 1.54752 6.84699 1.54848C6.84702 1.54925 6.84742 1.56043 6.84701 1.58046C6.8466 1.60019 6.84529 1.63413 6.84085 1.67971C6.83312 1.75911 6.80988 1.94017 6.72669 2.17322C6.64245 2.40924 6.46973 2.77291 6.12132 3.12132L1.87868 -1.12132ZM1 3C1 2.75023 1.04749 2.55343 1.07779 2.45227C1.08863 2.41605 1.09769 2.39215 1.08205 2.43624C1.07545 2.45482 1.0315 2.57582 0.992781 2.70756C0.908894 2.99301 0.750683 3.63423 0.927631 4.42342C1.10603 5.21909 1.53371 5.77635 1.87868 6.12132L6.12132 1.87868C6.29438 2.05174 6.63611 2.45883 6.78227 3.11073C6.92699 3.75617 6.79027 4.26004 6.74936 4.39925C6.73213 4.45787 6.71503 4.50352 6.73664 4.44261C6.7492 4.40722 6.78781 4.29969 6.82551 4.17379C6.90953 3.89326 7 3.49289 7 3H1ZM1.87868 6.12132C2.38119 6.62383 3.08908 7.04322 3.55738 7.2879C3.8369 7.43394 4.16305 7.58661 4.50295 7.71056C4.76822 7.80729 5.33654 8 6 8V2C6.13409 2 6.24099 2.01099 6.31212 2.02082C6.38495 2.03089 6.44035 2.04258 6.47497 2.05071C6.51041 2.05905 6.53455 2.06614 6.54603 2.06967C6.55791 2.07332 6.56222 2.075 6.55849 2.07364C6.54969 2.07043 6.52362 2.06036 6.48081 2.04099C6.43905 2.02209 6.38987 1.99821 6.33581 1.96997C6.282 1.94185 6.22806 1.91188 6.17693 1.8818C6.12553 1.85155 6.0817 1.82399 6.04749 1.8013C6.01181 1.77763 5.99628 1.76569 5.9983 1.76725C5.99992 1.7685 6.01079 1.77692 6.02889 1.79247C6.04604 1.8072 6.07878 1.83614 6.12132 1.87868L1.87868 6.12132ZM5 3C5 2.85147 5.02432 2.74818 5.03864 2.69961C5.05284 2.65141 5.06275 2.63783 5.05232 2.65718C5.04246 2.67548 5.02186 2.70932 4.98799 2.75376C4.95445 2.79775 4.91644 2.84092 4.87868 2.87868L9.12132 7.12132C9.85148 6.39116 11 4.90984 11 3H5ZM4.87868 2.87868C4.48351 3.27384 4.2317 3.67123 4.06362 3.99646C3.98741 4.14393 3.93026 4.2738 3.90479 4.3315C3.86669 4.41779 3.88343 4.37794 3.90611 4.33335C3.97193 4.20394 4.2349 3.71761 4.82926 3.35509C5.38841 3.01405 5.8826 3 6 3V9C6.48207 9 7.21914 8.92542 7.95357 8.47746C8.72324 8.00802 9.09392 7.36839 9.25411 7.05344C9.61307 6.34768 9.3121 6.93054 9.12132 7.12132L4.87868 2.87868ZM6 3C6.14853 3 6.25182 3.02432 6.30039 3.03864C6.34859 3.05284 6.36217 3.06275 6.34282 3.05232C6.32452 3.04246 6.29068 3.02186 6.24624 2.98799C6.20225 2.95445 6.15908 2.91644 6.12132 2.87868L1.87868 7.12132C2.60884 7.85148 4.09016 9 6 9V3ZM6.12132 2.87868C6.08356 2.84092 6.04555 2.79775 6.01201 2.75376C5.97814 2.70932 5.95754 2.67548 5.94768 2.65718C5.93725 2.63783 5.94716 2.65141 5.96136 2.69961C5.97568 2.74818 6 2.85147 6 3H0C0 4.90984 1.14852 6.39116 1.87868 7.12132L6.12132 2.87868ZM6 3C6 3.14853 5.97568 3.25182 5.96136 3.30039C5.94716 3.34859 5.93725 3.36217 5.94768 3.34282C5.95754 3.32452 5.97814 3.29068 6.01201 3.24624C6.04555 3.20225 6.08356 3.15908 6.12132 3.12132L1.87868 -1.12132C1.14852 -0.391162 0 1.09016 0 3H6ZM6.12132 3.12132C6.15908 3.08356 6.20225 3.04555 6.24624 3.01201C6.29068 2.97814 6.32452 2.95754 6.34282 2.94768C6.36217 2.93725 6.34859 2.94716 6.30039 2.96136C6.25182 2.97568 6.14853 3 6 3V-3C4.09016 -3 2.60884 -1.85148 1.87868 -1.12132L6.12132 3.12132ZM6 3C5.8826 3 5.38841 2.98595 4.82926 2.64491C4.2349 2.28239 3.97193 1.79606 3.90611 1.66665C3.88343 1.62206 3.86669 1.58221 3.90479 1.6685C3.93026 1.7262 3.98741 1.85607 4.06362 2.00354C4.2317 2.32877 4.48351 2.72616 4.87868 3.12132L9.12132 -1.12132C9.3121 -0.930544 9.61307 -0.347685 9.25411 -1.05344C9.09392 -1.36839 8.72324 -2.00802 7.95357 -2.47746C7.21914 -2.92542 6.48207 -3 6 -3V3ZM4.87868 3.12132C4.91644 3.15908 4.95445 3.20225 4.98799 3.24624C5.02186 3.29068 5.04246 3.32452 5.05232 3.34282C5.06275 3.36217 5.05284 3.34859 5.03864 3.30039C5.02432 3.25182 5 3.14853 5 3H11C11 1.09016 9.85148 -0.391162 9.12132 -1.12132L4.87868 3.12132Z" fill="#4F4F4F" mask="url(#path-1-inside-1)"/>
          </svg>
          {' '}
          <Typography variant="h6">{'Max Participants:' + ' ' + listing.maxParticipant}
          </Typography>
        </div> :
        null
      }
      {listing.serviceType == 5 && 
          (listing.slots && (listing.slots[0].startDate!==undefined && listing.slots[0].startDate !== null)) ?
                <div style = {{display: 'flex', flexDirection: 'row'}}>
                  <CalenderIcon />
                  <Typography variant="h6">
                    {' '} {listing.slots[0].startDate}, {listing.slots[0].startTime} - {listing.slots[0].endTime}
                  </Typography>
                </div> :
        null
      }
      {/*One Time Event*/}
      {listing.serviceType == 3 ? 
        <div style = {{display: 'flex', flexDirection: 'row'}}>
            <div style = {{display: 'flex', flexDirection: 'row'}}>
              <CalenderIcon />
              <Typography variant="h6">
                {moment(listing.date).format('DD/MM/YYYY')}
              </Typography>
            </div>

            <div style = {{display: 'flex', flexDirection: 'row',}}>
              <ClockIcon />
              <Typography variant="h6"> 
              {'  '} {moment(listing.startTime).format('hh:mm A')} - {moment(listing.endTime).format('hh:mm A')}
              </Typography>
            </div>
        </div>
      : 
        <div>
          {listing.serviceType == 2 ? 
            <div style = {{display: 'flex', flexDirection: 'row'}}>
                <CalenderIcon />{' '}
                <Typography variant="h6">
                  {days.map(day => <b>{day} {' '}</b>)}
                </Typography>
            </div>
            : ''}
        </div>
      }  
      
      {listing.serviceDuration!==undefined && listing.serviceDuration!==null ?
                <div>
                  <ClockIcon />
                  <Typography variant="h6"> {listing.serviceDuration}
                  </Typography>
                </div>:
                null
      }
    </div>
  );
}
